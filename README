Phidias Framework v2.0

Phidias Framework es un framework PHP de alto nivel para el desarrollo de aplicaciones web RESTful
(http://en.wikipedia.org/wiki/Representational_state_transfer)

Una aplicación web restful recibe peticiones HTTP [request],
ejecuta una lógica asociada [controller] la cual genera un conjunto de datos [model]
que es luego asociado a una vista [view] que organiza el contenido para ser retornado [response].



REQUESTS:

e.g. Al digitar la siguiente URL en un navegador:
http://myapp.com/blog/articles/politics/some-title?size=20&safe=1

se ejecuta la siguiente petición HTTP:

GET /blog/articles/politics/some-title?size=20&safe=1 HTTP/1.0

En la cual se identifican los siguientes componentes

GET                                 ----> método [method]
blog/articles/politics/some-title   ----> recurso [resource]
size=20&safe=1                      ----> atributos [attributes]

La aplicación web establece un "mapeo de recursos" [resource mapping] mediante
el cual determina un controlador [controller] encargado de ejecutar la lógica asociada al recurso [resource] solicitado

El controlador [controller] es una función invocable compuesta por:

Clase [controller class]
Método [controller method] y
Argumentos [controller arguments]


MAPEO DE RECURSOS [resource mapping]

Dentro de phidias framework se configuran "reglas de mapeo" [mapping rules] de la siguiente manera:

'[resource pattern]' => array('[controller class]', '[controller method]')

Cuando el recurso solicitado [resource] corresponde con el patron de recurso [resource pattern] de una regla [mapping rule]
el sistema ejecuta la función invocable "controller method" de la clase "controller class".


EJEMPLO:

Se define en la aplicación la siguiente regla de mapeo:
'articles' => array('Article_Controller', 'main')

Cuando se recibe una petición HTTP a http://myapp.com/articles/
se identifica que "articles" es el recurso a ejecutar.

Al parear el recurso con la regla de mapeo el sistema ejecuta

Article_Controller::main()


Adicionalmente, en un patron de recurso se pueden definir wildcards o variables, que son
enviadas como argumentos al controlador [controller] identificado, asi:


EJEMPLO:

Dada la siguiente regla de mapeo
'articles/:title' => array('Article_Controller', 'details')

Al recibir una peticion al recurso "articles/some-title" el sistema ejecuta

Article_Controller::details('some-title')