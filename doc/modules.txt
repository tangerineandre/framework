En Phidias Framework, toda aplicacion se considera un MODULO

Un MODULO encapsula la configuracion, librerias, idiomas, vistas, layouts y espacio publico de una aplicacion web
El mismo Phidias Framework es un MODULO.

Un MODULO se organiza de la siguiente manera:

Siendo "/" la carpeta root del modulo, esta PUEDE contener:

/configuration
/languages
/libraries
/layouts
/public
/views

/configuration:
Debe contener todos los archivos de configuracion del sistema.  Phidias Framework incluye todos los archivos .php bajo
esta carpeta.  Si estos retornan un arreglo, dicho arreglo es interpretado como directivas de configuracion asumiendo la llave como el nombre
de la directiva a establecer.

Ejemplo:
/configuration/db.php:

<?php
return array(
    'db.host'       => '127.0.0.1',
    'db.username'   => 'root',
    'db.database'   => 'foo',
    'db.charset'    => 'utf8'
);


/languages:
Debe contener una subcarpeta por cada idioma, y dentro de esta una cantidad arbitraria de archivos .php que contengan las
palabras de dicho idioma en un arreglo.  Al inicializarse Phidias Framework incluirá todos los archivos de la subcarpeta
especificada en la directiva de configuracion "environment.language" (se incluira /languages/[environment.language]/*.php)

/libraries:
Libraries contiene todos los archivos .php relevantes a la ejecución de la aplicacion (Controllers, Entities, etc).
El autocargado de clases buscará siempre los archivos correspondientes dentro de esta carpeta.

Por ejemplo, un llamado a $foo = new Some_Class_Foo; buscara la declaracion de la clase en /libraries/Some/Class/Foo.php

/layouts:
Contiene archivos .phtml para ser usados como LAYOUT de la aplicación.  Phidias Framework empleará un layout cuando se ha especificado
en la directiva de configuración "environment.layout"

/public:
Esta carpeta debe contener todos los archivos publicos.  Es decir, aquellos que serán accedidos mediante una URL.
(La configuración de esta URL se discute en ENVIRONMENTS.txt)

/views:
Esta carpeta contiene una subcarpeta por cada FORMATO de vistas a emplear.
Phidias Framework buscará VIEWS bajo la subcarpeta definida en la directiva de configuracion "view.format" y que tengan
la extension configurada en "view.extension".

Por ejemplo, si un controlador establece un view a utilizar:

$this->useView('some/test/view');

Phidias Framework la buscará en /views/[view.format]/some/test/view/.[view.extension]


